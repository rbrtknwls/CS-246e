#ifndef DEQUE_H
#define DEQUE_H
#include <iostream>
#include "node.h"
namespace cs246e {
  class deque {
      node** array;
      size_t n;
      int cap, min_idx, max_idx;
     public:
      deque();
      size_t size() const { return n; }
      bool empty() { return n == 0; }

      void push_front(int val);
      void push_back(int val);
      void pop_front();
      void pop_back();

      int at(size_t pos);
      class deque_iterator {
         node** data;
         int loc;
         node::iterator current;
         deque_iterator(node** data, int start, iterator it): data{data}, loc{start}, current{it} {}
        public:
         bool operator!=(deque_iterator &other) { return (loc != other.loc && current != other.current); }
         int &operator*() { return *current }
         deque_iterator &operator++() {
            if (data[loc] =          }



      }
     private:
      void increaseCap();

   };


}

#endif
